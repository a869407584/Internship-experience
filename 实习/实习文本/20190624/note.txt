20190624~20190628上课时间：
	上午 9：00~11：30
	1    9：00~9：45
	2    9：55~10：40
	3    10：50~11：30
	
	下午 14：00~17：15
	4    14：00~14：45
	5    14：55~15：40
	6    15：50~16：35
	7    16：45~17：15
	
	晚上 19：00~21：00
	8    19：00~19：50
	9    20：10~21：00

20190624主要讲解知识点：
	1）视频监控系统开发环境的安装。
	2）Ubuntu2.04系统的使用复习。
	3）GEC6818开发板的使用。
	4）LCD屏幕的学习及使用。

一、视频监控系统开发环境的安装。
		教学软件：
			1）feiqiu软件：上课资料的下载
			2）EMC控屏软件。
		开发工具：
			1）虚拟机10
			2）Ubuntu2.04系统
			3）Notpad++
			4）SercureCRT软件：下载程序 
			5）tftp：网线下载程序
			
二、Ubuntu2.04系统的使用复习。
	打开终端：Ctrl+Alt+T
	个人验收练习Ubuntu12.04shell命令练习.docx
	（需要提交：更改文档名称为：学号+姓名(1).docx）
	
	创建共享文件夹：
	功能：实现一个文件夹可以在两个系统平台上使用。（Windows10和Linux）
	1）在windows系统中创建一个文件夹。
	2）进入虚拟机设置。
	3）打开一个终端，切换路径到/mnt/hgfs/share

三、GEC6818开发板的使用。	
	1）介绍和连接GEC6818（Cortex-A53）开发板的硬件。
	2）主机（电脑）通过SercureCRT软件控制从机（GEC6818（Cortex-A53）开发板）
		1）安装USB转串口的驱动。
			安装成功的标志：在设备管理器中显示如下信息：
					USB-SERIAL CH340（COM3）
		2）配置SercureCRT软件
		练习2：
			1）切换路径到/root/目录中。
			2）删除/root/目录中所有文件。
			3）创建一个目录project，进入该目录。
			4）在目录project中连续创建lib和images两个目录。
			5）下载共享文件夹中armhello二进制执行程序到开发板/root/project目录中执行。
	
	举例：
		下载共享文件夹中armhello二进制执行程序到开发板/root/project目录中执行。
		SercureCRT软件中使用rx命令下载。
		具体的用法：rx + 下载文件名
		举例：下载armhello到开发板中。
			
四、LCD屏幕的学习及使用。
	1）GEC6818开发板LCD屏幕的大小：7寸电容屏
				           总像素：800*480
	 LCD屏幕1个像素点占用的字节数：4byte
	 4byte：
		1byte	A  ---->透明度（默认为0x00）
		1byte   R  ---->红色 
		1byte	G  ---->绿色 
		1byte	B  ---->蓝色

	 LCD屏幕1个像素点显示绿色？？
	     A      ：      R        ：     G     ：    B
	0000 0000   ：  0000 0000    ： 1111 1111 : 0000 0000  
	
	C语言存储一个像素点的数据显示绿色：
			int color = 0x0000ff00;  ------>内存

	举例：
		整个LCD屏幕显示绿色？？？
		具体的编程思路：
			1）打开LCD屏幕。（open）
				一切皆文件。LCD屏幕--->/dev/fb0 
				
		   #include <sys/types.h>
		   #include <sys/stat.h>
		   #include <fcntl.h>
		   int open(const char *pathname, int flags);
		   
		   int fd_fb0;
							
		   2）将800*480个像素点的内存数据放到显存上显示。（mmap、munmap）
		   mmap
		   man 3 mmap
		   功能：创建映射空间。
		   函数的头文件： #include <sys/mman.h>
		   函数的原型：void *mmap(void *addr, size_t len, int prot, int flags,int fildes, off_t off);
		   参数的说明：
					void *addr：一般填NULL。（表示有系统内核自动分配地址）
					size_t len：映射空间的大小。（整个LCD屏幕像素点的大小：800*480*4）
					int prot：映射空间属性的设置。（可读可写   PROT_READ|PROT_WRITE）
							Symbolic Constant   Description
							PROT_READ           Data can be read.
							PROT_WRITE          Data can be written.
							PROT_EXEC           Data can be executed.
					int flags:MAP_SHARED (共享映射空间)
					        Symbolic Constant   Description
							MAP_SHARED          Changes are shared.
							MAP_PRIVATE         Changes are private.
					int fildes：“虚拟通道的出口” --->fd_fb0
					off_t off：偏移量，一般填0。
		   返回值：
				成功：返回一个(0,0)点坐标的地址。
				失败： MAP_FAILED
			
			int *p_mmap = NULL;
			p_mmap = mmap(……);
			
			munmap
			man 3 munmap
			#include <sys/mman.h>
			int munmap(void *addr, size_t len);
			void *addr：分配映射空间的起始地址。
			size_t len：释放空间的大小。

			什么是指针？
			指针是一个只能存储地址的变量。
			
			
		   3）关闭LCD屏幕。（close）
		   #include <unistd.h>
		   int close(int fd);

	练习3：
		整个LCD屏幕显示绿色。
					
	练习4：
		默认以左上角为原点，横纵为x轴，纵轴为y轴，将LCD屏幕的800*480个像素点都以坐标表示。
		在LCD屏幕上画一个以（400，240）为圆心，50为半径的绿色的圆。
		
		
	
			